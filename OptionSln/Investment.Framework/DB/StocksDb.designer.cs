#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Investment.Framework.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Stocks")]
	public partial class StocksDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InserttbStockShare(tbStockShare instance);
    partial void UpdatetbStockShare(tbStockShare instance);
    partial void DeletetbStockShare(tbStockShare instance);
    partial void InserttbStockExchangeList(tbStockExchangeList instance);
    partial void UpdatetbStockExchangeList(tbStockExchangeList instance);
    partial void DeletetbStockExchangeList(tbStockExchangeList instance);
    partial void InserttbStockIndexPrice(tbStockIndexPrice instance);
    partial void UpdatetbStockIndexPrice(tbStockIndexPrice instance);
    partial void DeletetbStockIndexPrice(tbStockIndexPrice instance);
    partial void InserttbStockOptionSummary(tbStockOptionSummary instance);
    partial void UpdatetbStockOptionSummary(tbStockOptionSummary instance);
    partial void DeletetbStockOptionSummary(tbStockOptionSummary instance);
    partial void InserttbStockPrice(tbStockPrice instance);
    partial void UpdatetbStockPrice(tbStockPrice instance);
    partial void DeletetbStockPrice(tbStockPrice instance);
    partial void InserttbConfig(tbConfig instance);
    partial void UpdatetbConfig(tbConfig instance);
    partial void DeletetbConfig(tbConfig instance);
    partial void InserttbStockProfit(tbStockProfit instance);
    partial void UpdatetbStockProfit(tbStockProfit instance);
    partial void DeletetbStockProfit(tbStockProfit instance);
    #endregion
		
		public StocksDbDataContext() : 
				base(global::Investment.Framework.Properties.Settings.Default.StocksConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StocksDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StocksDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StocksDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StocksDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbStockShare> tbStockShare
		{
			get
			{
				return this.GetTable<tbStockShare>();
			}
		}
		
		public System.Data.Linq.Table<tbStockExchangeList> tbStockExchangeList
		{
			get
			{
				return this.GetTable<tbStockExchangeList>();
			}
		}
		
		public System.Data.Linq.Table<tbStockIndexPrice> tbStockIndexPrice
		{
			get
			{
				return this.GetTable<tbStockIndexPrice>();
			}
		}
		
		public System.Data.Linq.Table<tbStockOptionSummary> tbStockOptionSummary
		{
			get
			{
				return this.GetTable<tbStockOptionSummary>();
			}
		}
		
		public System.Data.Linq.Table<tbStockPrice> tbStockPrice
		{
			get
			{
				return this.GetTable<tbStockPrice>();
			}
		}
		
		public System.Data.Linq.Table<tbConfig> tbConfig
		{
			get
			{
				return this.GetTable<tbConfig>();
			}
		}
		
		public System.Data.Linq.Table<tbStockProfit> tbStockProfit
		{
			get
			{
				return this.GetTable<tbStockProfit>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Proc_GetStockFirstDealDay")]
		public ISingleResult<Proc_GetStockFirstDealDayResult> Proc_GetStockFirstDealDay([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Time", DbType="DateTime")] System.Nullable<System.DateTime> time)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), time);
			return ((ISingleResult<Proc_GetStockFirstDealDayResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbStockShare")]
	public partial class tbStockShare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _日期;
		
		private string _证券代码;
		
		private string _证券名称;
		
		private double _证券数量;
		
		private double _可卖数量;
		
		private double _成本价;
		
		private double _当前价;
		
		private double _最新市值;
		
		private double _累计浮动盈亏;
		
		private System.Nullable<double> _盈亏比例;
		
		private string _股东代码;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On日期Changing(System.DateTime value);
    partial void On日期Changed();
    partial void On证券代码Changing(string value);
    partial void On证券代码Changed();
    partial void On证券名称Changing(string value);
    partial void On证券名称Changed();
    partial void On证券数量Changing(double value);
    partial void On证券数量Changed();
    partial void On可卖数量Changing(double value);
    partial void On可卖数量Changed();
    partial void On成本价Changing(double value);
    partial void On成本价Changed();
    partial void On当前价Changing(double value);
    partial void On当前价Changed();
    partial void On最新市值Changing(double value);
    partial void On最新市值Changed();
    partial void On累计浮动盈亏Changing(double value);
    partial void On累计浮动盈亏Changed();
    partial void On盈亏比例Changing(System.Nullable<double> value);
    partial void On盈亏比例Changed();
    partial void On股东代码Changing(string value);
    partial void On股东代码Changed();
    #endregion
		
		public tbStockShare()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_日期", DbType="DateTime NOT NULL")]
		public System.DateTime 日期
		{
			get
			{
				return this._日期;
			}
			set
			{
				if ((this._日期 != value))
				{
					this.On日期Changing(value);
					this.SendPropertyChanging();
					this._日期 = value;
					this.SendPropertyChanged("日期");
					this.On日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券代码", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string 证券代码
		{
			get
			{
				return this._证券代码;
			}
			set
			{
				if ((this._证券代码 != value))
				{
					this.On证券代码Changing(value);
					this.SendPropertyChanging();
					this._证券代码 = value;
					this.SendPropertyChanged("证券代码");
					this.On证券代码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券名称", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string 证券名称
		{
			get
			{
				return this._证券名称;
			}
			set
			{
				if ((this._证券名称 != value))
				{
					this.On证券名称Changing(value);
					this.SendPropertyChanging();
					this._证券名称 = value;
					this.SendPropertyChanged("证券名称");
					this.On证券名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券数量", DbType="Float NOT NULL")]
		public double 证券数量
		{
			get
			{
				return this._证券数量;
			}
			set
			{
				if ((this._证券数量 != value))
				{
					this.On证券数量Changing(value);
					this.SendPropertyChanging();
					this._证券数量 = value;
					this.SendPropertyChanged("证券数量");
					this.On证券数量Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_可卖数量", DbType="Float NOT NULL")]
		public double 可卖数量
		{
			get
			{
				return this._可卖数量;
			}
			set
			{
				if ((this._可卖数量 != value))
				{
					this.On可卖数量Changing(value);
					this.SendPropertyChanging();
					this._可卖数量 = value;
					this.SendPropertyChanged("可卖数量");
					this.On可卖数量Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_成本价", DbType="Float NOT NULL")]
		public double 成本价
		{
			get
			{
				return this._成本价;
			}
			set
			{
				if ((this._成本价 != value))
				{
					this.On成本价Changing(value);
					this.SendPropertyChanging();
					this._成本价 = value;
					this.SendPropertyChanged("成本价");
					this.On成本价Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_当前价", DbType="Float NOT NULL")]
		public double 当前价
		{
			get
			{
				return this._当前价;
			}
			set
			{
				if ((this._当前价 != value))
				{
					this.On当前价Changing(value);
					this.SendPropertyChanging();
					this._当前价 = value;
					this.SendPropertyChanged("当前价");
					this.On当前价Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_最新市值", DbType="Float NOT NULL")]
		public double 最新市值
		{
			get
			{
				return this._最新市值;
			}
			set
			{
				if ((this._最新市值 != value))
				{
					this.On最新市值Changing(value);
					this.SendPropertyChanging();
					this._最新市值 = value;
					this.SendPropertyChanged("最新市值");
					this.On最新市值Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_累计浮动盈亏", DbType="Float NOT NULL")]
		public double 累计浮动盈亏
		{
			get
			{
				return this._累计浮动盈亏;
			}
			set
			{
				if ((this._累计浮动盈亏 != value))
				{
					this.On累计浮动盈亏Changing(value);
					this.SendPropertyChanging();
					this._累计浮动盈亏 = value;
					this.SendPropertyChanged("累计浮动盈亏");
					this.On累计浮动盈亏Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_盈亏比例", DbType="Float")]
		public System.Nullable<double> 盈亏比例
		{
			get
			{
				return this._盈亏比例;
			}
			set
			{
				if ((this._盈亏比例 != value))
				{
					this.On盈亏比例Changing(value);
					this.SendPropertyChanging();
					this._盈亏比例 = value;
					this.SendPropertyChanged("盈亏比例");
					this.On盈亏比例Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_股东代码", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string 股东代码
		{
			get
			{
				return this._股东代码;
			}
			set
			{
				if ((this._股东代码 != value))
				{
					this.On股东代码Changing(value);
					this.SendPropertyChanging();
					this._股东代码 = value;
					this.SendPropertyChanged("股东代码");
					this.On股东代码Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbStockExchangeList")]
	public partial class tbStockExchangeList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _成交日期;
		
		private string _业务名称;
		
		private string _证券代码;
		
		private string _证券名称;
		
		private decimal _成交价格;
		
		private int _成交数量;
		
		private int _剩余数量;
		
		private decimal _成交金额;
		
		private decimal _清算金额;
		
		private decimal _剩余金额;
		
		private decimal _净佣金;
		
		private decimal _规费;
		
		private decimal _印花税;
		
		private decimal _过户费;
		
		private decimal _结算费;
		
		private decimal _附加费;
		
		private string _成交编号;
		
		private string _股东代码;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void On成交日期Changing(System.DateTime value);
    partial void On成交日期Changed();
    partial void On业务名称Changing(string value);
    partial void On业务名称Changed();
    partial void On证券代码Changing(string value);
    partial void On证券代码Changed();
    partial void On证券名称Changing(string value);
    partial void On证券名称Changed();
    partial void On成交价格Changing(decimal value);
    partial void On成交价格Changed();
    partial void On成交数量Changing(int value);
    partial void On成交数量Changed();
    partial void On剩余数量Changing(int value);
    partial void On剩余数量Changed();
    partial void On成交金额Changing(decimal value);
    partial void On成交金额Changed();
    partial void On清算金额Changing(decimal value);
    partial void On清算金额Changed();
    partial void On剩余金额Changing(decimal value);
    partial void On剩余金额Changed();
    partial void On净佣金Changing(decimal value);
    partial void On净佣金Changed();
    partial void On规费Changing(decimal value);
    partial void On规费Changed();
    partial void On印花税Changing(decimal value);
    partial void On印花税Changed();
    partial void On过户费Changing(decimal value);
    partial void On过户费Changed();
    partial void On结算费Changing(decimal value);
    partial void On结算费Changed();
    partial void On附加费Changing(decimal value);
    partial void On附加费Changed();
    partial void On成交编号Changing(string value);
    partial void On成交编号Changed();
    partial void On股东代码Changing(string value);
    partial void On股东代码Changed();
    #endregion
		
		public tbStockExchangeList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_成交日期", DbType="DateTime NOT NULL")]
		public System.DateTime 成交日期
		{
			get
			{
				return this._成交日期;
			}
			set
			{
				if ((this._成交日期 != value))
				{
					this.On成交日期Changing(value);
					this.SendPropertyChanging();
					this._成交日期 = value;
					this.SendPropertyChanged("成交日期");
					this.On成交日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_业务名称", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string 业务名称
		{
			get
			{
				return this._业务名称;
			}
			set
			{
				if ((this._业务名称 != value))
				{
					this.On业务名称Changing(value);
					this.SendPropertyChanging();
					this._业务名称 = value;
					this.SendPropertyChanged("业务名称");
					this.On业务名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券代码", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string 证券代码
		{
			get
			{
				return this._证券代码;
			}
			set
			{
				if ((this._证券代码 != value))
				{
					this.On证券代码Changing(value);
					this.SendPropertyChanging();
					this._证券代码 = value;
					this.SendPropertyChanged("证券代码");
					this.On证券代码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券名称", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string 证券名称
		{
			get
			{
				return this._证券名称;
			}
			set
			{
				if ((this._证券名称 != value))
				{
					this.On证券名称Changing(value);
					this.SendPropertyChanging();
					this._证券名称 = value;
					this.SendPropertyChanged("证券名称");
					this.On证券名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_成交价格", DbType="Decimal(18,2) NOT NULL")]
		public decimal 成交价格
		{
			get
			{
				return this._成交价格;
			}
			set
			{
				if ((this._成交价格 != value))
				{
					this.On成交价格Changing(value);
					this.SendPropertyChanging();
					this._成交价格 = value;
					this.SendPropertyChanged("成交价格");
					this.On成交价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_成交数量", DbType="Int NOT NULL")]
		public int 成交数量
		{
			get
			{
				return this._成交数量;
			}
			set
			{
				if ((this._成交数量 != value))
				{
					this.On成交数量Changing(value);
					this.SendPropertyChanging();
					this._成交数量 = value;
					this.SendPropertyChanged("成交数量");
					this.On成交数量Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_剩余数量", DbType="Int NOT NULL")]
		public int 剩余数量
		{
			get
			{
				return this._剩余数量;
			}
			set
			{
				if ((this._剩余数量 != value))
				{
					this.On剩余数量Changing(value);
					this.SendPropertyChanging();
					this._剩余数量 = value;
					this.SendPropertyChanged("剩余数量");
					this.On剩余数量Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_成交金额", DbType="Decimal(18,2) NOT NULL")]
		public decimal 成交金额
		{
			get
			{
				return this._成交金额;
			}
			set
			{
				if ((this._成交金额 != value))
				{
					this.On成交金额Changing(value);
					this.SendPropertyChanging();
					this._成交金额 = value;
					this.SendPropertyChanged("成交金额");
					this.On成交金额Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_清算金额", DbType="Decimal(18,2) NOT NULL")]
		public decimal 清算金额
		{
			get
			{
				return this._清算金额;
			}
			set
			{
				if ((this._清算金额 != value))
				{
					this.On清算金额Changing(value);
					this.SendPropertyChanging();
					this._清算金额 = value;
					this.SendPropertyChanged("清算金额");
					this.On清算金额Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_剩余金额", DbType="Decimal(18,2) NOT NULL")]
		public decimal 剩余金额
		{
			get
			{
				return this._剩余金额;
			}
			set
			{
				if ((this._剩余金额 != value))
				{
					this.On剩余金额Changing(value);
					this.SendPropertyChanging();
					this._剩余金额 = value;
					this.SendPropertyChanged("剩余金额");
					this.On剩余金额Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_净佣金", DbType="Decimal(18,2) NOT NULL")]
		public decimal 净佣金
		{
			get
			{
				return this._净佣金;
			}
			set
			{
				if ((this._净佣金 != value))
				{
					this.On净佣金Changing(value);
					this.SendPropertyChanging();
					this._净佣金 = value;
					this.SendPropertyChanged("净佣金");
					this.On净佣金Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_规费", DbType="Decimal(18,2) NOT NULL")]
		public decimal 规费
		{
			get
			{
				return this._规费;
			}
			set
			{
				if ((this._规费 != value))
				{
					this.On规费Changing(value);
					this.SendPropertyChanging();
					this._规费 = value;
					this.SendPropertyChanged("规费");
					this.On规费Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_印花税", DbType="Decimal(18,2) NOT NULL")]
		public decimal 印花税
		{
			get
			{
				return this._印花税;
			}
			set
			{
				if ((this._印花税 != value))
				{
					this.On印花税Changing(value);
					this.SendPropertyChanging();
					this._印花税 = value;
					this.SendPropertyChanged("印花税");
					this.On印花税Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_过户费", DbType="Decimal(18,2) NOT NULL")]
		public decimal 过户费
		{
			get
			{
				return this._过户费;
			}
			set
			{
				if ((this._过户费 != value))
				{
					this.On过户费Changing(value);
					this.SendPropertyChanging();
					this._过户费 = value;
					this.SendPropertyChanged("过户费");
					this.On过户费Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_结算费", DbType="Decimal(18,2) NOT NULL")]
		public decimal 结算费
		{
			get
			{
				return this._结算费;
			}
			set
			{
				if ((this._结算费 != value))
				{
					this.On结算费Changing(value);
					this.SendPropertyChanging();
					this._结算费 = value;
					this.SendPropertyChanged("结算费");
					this.On结算费Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_附加费", DbType="Decimal(18,2) NOT NULL")]
		public decimal 附加费
		{
			get
			{
				return this._附加费;
			}
			set
			{
				if ((this._附加费 != value))
				{
					this.On附加费Changing(value);
					this.SendPropertyChanging();
					this._附加费 = value;
					this.SendPropertyChanged("附加费");
					this.On附加费Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_成交编号", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string 成交编号
		{
			get
			{
				return this._成交编号;
			}
			set
			{
				if ((this._成交编号 != value))
				{
					this.On成交编号Changing(value);
					this.SendPropertyChanging();
					this._成交编号 = value;
					this.SendPropertyChanged("成交编号");
					this.On成交编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_股东代码", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string 股东代码
		{
			get
			{
				return this._股东代码;
			}
			set
			{
				if ((this._股东代码 != value))
				{
					this.On股东代码Changing(value);
					this.SendPropertyChanging();
					this._股东代码 = value;
					this.SendPropertyChanged("股东代码");
					this.On股东代码Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbStockIndexPrice")]
	public partial class tbStockIndexPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _证券代码;
		
		private System.DateTime _日期;
		
		private string _证券名称;
		
		private decimal _开盘价格;
		
		private decimal _最高价格;
		
		private decimal _最低价格;
		
		private decimal _收盘价格;
		
		private string _指数类型;
		
		private string _交易日类型;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void On证券代码Changing(string value);
    partial void On证券代码Changed();
    partial void On日期Changing(System.DateTime value);
    partial void On日期Changed();
    partial void On证券名称Changing(string value);
    partial void On证券名称Changed();
    partial void On开盘价格Changing(decimal value);
    partial void On开盘价格Changed();
    partial void On最高价格Changing(decimal value);
    partial void On最高价格Changed();
    partial void On最低价格Changing(decimal value);
    partial void On最低价格Changed();
    partial void On收盘价格Changing(decimal value);
    partial void On收盘价格Changed();
    partial void On指数类型Changing(string value);
    partial void On指数类型Changed();
    partial void On交易日类型Changing(string value);
    partial void On交易日类型Changed();
    #endregion
		
		public tbStockIndexPrice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券代码", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string 证券代码
		{
			get
			{
				return this._证券代码;
			}
			set
			{
				if ((this._证券代码 != value))
				{
					this.On证券代码Changing(value);
					this.SendPropertyChanging();
					this._证券代码 = value;
					this.SendPropertyChanged("证券代码");
					this.On证券代码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_日期", DbType="DateTime NOT NULL")]
		public System.DateTime 日期
		{
			get
			{
				return this._日期;
			}
			set
			{
				if ((this._日期 != value))
				{
					this.On日期Changing(value);
					this.SendPropertyChanging();
					this._日期 = value;
					this.SendPropertyChanged("日期");
					this.On日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券名称", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string 证券名称
		{
			get
			{
				return this._证券名称;
			}
			set
			{
				if ((this._证券名称 != value))
				{
					this.On证券名称Changing(value);
					this.SendPropertyChanging();
					this._证券名称 = value;
					this.SendPropertyChanged("证券名称");
					this.On证券名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_开盘价格", DbType="Decimal(12,4) NOT NULL")]
		public decimal 开盘价格
		{
			get
			{
				return this._开盘价格;
			}
			set
			{
				if ((this._开盘价格 != value))
				{
					this.On开盘价格Changing(value);
					this.SendPropertyChanging();
					this._开盘价格 = value;
					this.SendPropertyChanged("开盘价格");
					this.On开盘价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_最高价格", DbType="Decimal(12,4) NOT NULL")]
		public decimal 最高价格
		{
			get
			{
				return this._最高价格;
			}
			set
			{
				if ((this._最高价格 != value))
				{
					this.On最高价格Changing(value);
					this.SendPropertyChanging();
					this._最高价格 = value;
					this.SendPropertyChanged("最高价格");
					this.On最高价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_最低价格", DbType="Decimal(12,4) NOT NULL")]
		public decimal 最低价格
		{
			get
			{
				return this._最低价格;
			}
			set
			{
				if ((this._最低价格 != value))
				{
					this.On最低价格Changing(value);
					this.SendPropertyChanging();
					this._最低价格 = value;
					this.SendPropertyChanged("最低价格");
					this.On最低价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_收盘价格", DbType="Decimal(12,4) NOT NULL")]
		public decimal 收盘价格
		{
			get
			{
				return this._收盘价格;
			}
			set
			{
				if ((this._收盘价格 != value))
				{
					this.On收盘价格Changing(value);
					this.SendPropertyChanging();
					this._收盘价格 = value;
					this.SendPropertyChanged("收盘价格");
					this.On收盘价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_指数类型", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string 指数类型
		{
			get
			{
				return this._指数类型;
			}
			set
			{
				if ((this._指数类型 != value))
				{
					this.On指数类型Changing(value);
					this.SendPropertyChanging();
					this._指数类型 = value;
					this.SendPropertyChanged("指数类型");
					this.On指数类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_交易日类型", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string 交易日类型
		{
			get
			{
				return this._交易日类型;
			}
			set
			{
				if ((this._交易日类型 != value))
				{
					this.On交易日类型Changing(value);
					this.SendPropertyChanging();
					this._交易日类型 = value;
					this.SendPropertyChanged("交易日类型");
					this.On交易日类型Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbStockOptionSummary")]
	public partial class tbStockOptionSummary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _recordtime;
		
		private decimal _资产;
		
		private decimal _浮动盈亏;
		
		private decimal _可用资金;
		
		private decimal _风险度;
		
		private decimal _上证指数;
		
		private decimal _上证50ETF;
		
		private System.Nullable<decimal> _年化收益率;
		
		private string _DateType;
		
		private string _Remark;
		
		private decimal _本金;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrecordtimeChanging(System.DateTime value);
    partial void OnrecordtimeChanged();
    partial void On资产Changing(decimal value);
    partial void On资产Changed();
    partial void On浮动盈亏Changing(decimal value);
    partial void On浮动盈亏Changed();
    partial void On可用资金Changing(decimal value);
    partial void On可用资金Changed();
    partial void On风险度Changing(decimal value);
    partial void On风险度Changed();
    partial void On上证指数Changing(decimal value);
    partial void On上证指数Changed();
    partial void On上证50ETFChanging(decimal value);
    partial void On上证50ETFChanged();
    partial void On年化收益率Changing(System.Nullable<decimal> value);
    partial void On年化收益率Changed();
    partial void OnDateTypeChanging(string value);
    partial void OnDateTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void On本金Changing(decimal value);
    partial void On本金Changed();
    #endregion
		
		public tbStockOptionSummary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recordtime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime recordtime
		{
			get
			{
				return this._recordtime;
			}
			set
			{
				if ((this._recordtime != value))
				{
					this.OnrecordtimeChanging(value);
					this.SendPropertyChanging();
					this._recordtime = value;
					this.SendPropertyChanged("recordtime");
					this.OnrecordtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_资产", DbType="Decimal(18,4) NOT NULL")]
		public decimal 资产
		{
			get
			{
				return this._资产;
			}
			set
			{
				if ((this._资产 != value))
				{
					this.On资产Changing(value);
					this.SendPropertyChanging();
					this._资产 = value;
					this.SendPropertyChanged("资产");
					this.On资产Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_浮动盈亏", DbType="Decimal(18,4) NOT NULL")]
		public decimal 浮动盈亏
		{
			get
			{
				return this._浮动盈亏;
			}
			set
			{
				if ((this._浮动盈亏 != value))
				{
					this.On浮动盈亏Changing(value);
					this.SendPropertyChanging();
					this._浮动盈亏 = value;
					this.SendPropertyChanged("浮动盈亏");
					this.On浮动盈亏Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_可用资金", DbType="Decimal(18,4) NOT NULL")]
		public decimal 可用资金
		{
			get
			{
				return this._可用资金;
			}
			set
			{
				if ((this._可用资金 != value))
				{
					this.On可用资金Changing(value);
					this.SendPropertyChanging();
					this._可用资金 = value;
					this.SendPropertyChanged("可用资金");
					this.On可用资金Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_风险度", DbType="Decimal(18,2) NOT NULL")]
		public decimal 风险度
		{
			get
			{
				return this._风险度;
			}
			set
			{
				if ((this._风险度 != value))
				{
					this.On风险度Changing(value);
					this.SendPropertyChanging();
					this._风险度 = value;
					this.SendPropertyChanged("风险度");
					this.On风险度Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_上证指数", DbType="Decimal(8,2) NOT NULL")]
		public decimal 上证指数
		{
			get
			{
				return this._上证指数;
			}
			set
			{
				if ((this._上证指数 != value))
				{
					this.On上证指数Changing(value);
					this.SendPropertyChanging();
					this._上证指数 = value;
					this.SendPropertyChanged("上证指数");
					this.On上证指数Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_上证50ETF", DbType="Decimal(8,3) NOT NULL")]
		public decimal 上证50ETF
		{
			get
			{
				return this._上证50ETF;
			}
			set
			{
				if ((this._上证50ETF != value))
				{
					this.On上证50ETFChanging(value);
					this.SendPropertyChanging();
					this._上证50ETF = value;
					this.SendPropertyChanged("上证50ETF");
					this.On上证50ETFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_年化收益率", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> 年化收益率
		{
			get
			{
				return this._年化收益率;
			}
			set
			{
				if ((this._年化收益率 != value))
				{
					this.On年化收益率Changing(value);
					this.SendPropertyChanging();
					this._年化收益率 = value;
					this.SendPropertyChanged("年化收益率");
					this.On年化收益率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateType", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string DateType
		{
			get
			{
				return this._DateType;
			}
			set
			{
				if ((this._DateType != value))
				{
					this.OnDateTypeChanging(value);
					this.SendPropertyChanging();
					this._DateType = value;
					this.SendPropertyChanged("DateType");
					this.OnDateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_本金", DbType="Decimal(18,4) NOT NULL")]
		public decimal 本金
		{
			get
			{
				return this._本金;
			}
			set
			{
				if ((this._本金 != value))
				{
					this.On本金Changing(value);
					this.SendPropertyChanging();
					this._本金 = value;
					this.SendPropertyChanged("本金");
					this.On本金Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbStockPrice")]
	public partial class tbStockPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _证券代码;
		
		private System.DateTime _日期;
		
		private string _证券名称;
		
		private decimal _开盘价格;
		
		private decimal _最高价格;
		
		private decimal _最低价格;
		
		private decimal _收盘价格;
		
		private string _类型;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void On证券代码Changing(string value);
    partial void On证券代码Changed();
    partial void On日期Changing(System.DateTime value);
    partial void On日期Changed();
    partial void On证券名称Changing(string value);
    partial void On证券名称Changed();
    partial void On开盘价格Changing(decimal value);
    partial void On开盘价格Changed();
    partial void On最高价格Changing(decimal value);
    partial void On最高价格Changed();
    partial void On最低价格Changing(decimal value);
    partial void On最低价格Changed();
    partial void On收盘价格Changing(decimal value);
    partial void On收盘价格Changed();
    partial void On类型Changing(string value);
    partial void On类型Changed();
    #endregion
		
		public tbStockPrice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券代码", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string 证券代码
		{
			get
			{
				return this._证券代码;
			}
			set
			{
				if ((this._证券代码 != value))
				{
					this.On证券代码Changing(value);
					this.SendPropertyChanging();
					this._证券代码 = value;
					this.SendPropertyChanged("证券代码");
					this.On证券代码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_日期", DbType="DateTime NOT NULL")]
		public System.DateTime 日期
		{
			get
			{
				return this._日期;
			}
			set
			{
				if ((this._日期 != value))
				{
					this.On日期Changing(value);
					this.SendPropertyChanging();
					this._日期 = value;
					this.SendPropertyChanged("日期");
					this.On日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券名称", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string 证券名称
		{
			get
			{
				return this._证券名称;
			}
			set
			{
				if ((this._证券名称 != value))
				{
					this.On证券名称Changing(value);
					this.SendPropertyChanging();
					this._证券名称 = value;
					this.SendPropertyChanged("证券名称");
					this.On证券名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_开盘价格", DbType="Decimal(12,4) NOT NULL")]
		public decimal 开盘价格
		{
			get
			{
				return this._开盘价格;
			}
			set
			{
				if ((this._开盘价格 != value))
				{
					this.On开盘价格Changing(value);
					this.SendPropertyChanging();
					this._开盘价格 = value;
					this.SendPropertyChanged("开盘价格");
					this.On开盘价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_最高价格", DbType="Decimal(12,4) NOT NULL")]
		public decimal 最高价格
		{
			get
			{
				return this._最高价格;
			}
			set
			{
				if ((this._最高价格 != value))
				{
					this.On最高价格Changing(value);
					this.SendPropertyChanging();
					this._最高价格 = value;
					this.SendPropertyChanged("最高价格");
					this.On最高价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_最低价格", DbType="Decimal(12,4) NOT NULL")]
		public decimal 最低价格
		{
			get
			{
				return this._最低价格;
			}
			set
			{
				if ((this._最低价格 != value))
				{
					this.On最低价格Changing(value);
					this.SendPropertyChanging();
					this._最低价格 = value;
					this.SendPropertyChanged("最低价格");
					this.On最低价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_收盘价格", DbType="Decimal(12,4) NOT NULL")]
		public decimal 收盘价格
		{
			get
			{
				return this._收盘价格;
			}
			set
			{
				if ((this._收盘价格 != value))
				{
					this.On收盘价格Changing(value);
					this.SendPropertyChanging();
					this._收盘价格 = value;
					this.SendPropertyChanged("收盘价格");
					this.On收盘价格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_类型", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string 类型
		{
			get
			{
				return this._类型;
			}
			set
			{
				if ((this._类型 != value))
				{
					this.On类型Changing(value);
					this.SendPropertyChanging();
					this._类型 = value;
					this.SendPropertyChanged("类型");
					this.On类型Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbConfig")]
	public partial class tbConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private System.DateTime _StartTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    #endregion
		
		public tbConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(12)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbStockProfit")]
	public partial class tbStockProfit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _日期;
		
		private decimal _盈亏;
		
		private decimal _证券市值;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On日期Changing(System.DateTime value);
    partial void On日期Changed();
    partial void On盈亏Changing(decimal value);
    partial void On盈亏Changed();
    partial void On证券市值Changing(decimal value);
    partial void On证券市值Changed();
    #endregion
		
		public tbStockProfit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_日期", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime 日期
		{
			get
			{
				return this._日期;
			}
			set
			{
				if ((this._日期 != value))
				{
					this.On日期Changing(value);
					this.SendPropertyChanging();
					this._日期 = value;
					this.SendPropertyChanged("日期");
					this.On日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_盈亏", DbType="Decimal(18,4) NOT NULL")]
		public decimal 盈亏
		{
			get
			{
				return this._盈亏;
			}
			set
			{
				if ((this._盈亏 != value))
				{
					this.On盈亏Changing(value);
					this.SendPropertyChanging();
					this._盈亏 = value;
					this.SendPropertyChanged("盈亏");
					this.On盈亏Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券市值", DbType="Decimal(18,4) NOT NULL")]
		public decimal 证券市值
		{
			get
			{
				return this._证券市值;
			}
			set
			{
				if ((this._证券市值 != value))
				{
					this.On证券市值Changing(value);
					this.SendPropertyChanging();
					this._证券市值 = value;
					this.SendPropertyChanged("证券市值");
					this.On证券市值Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Proc_GetStockFirstDealDayResult
	{
		
		private string _证券代码;
		
		private string _证券名称;
		
		private System.DateTime _成交日期;
		
		private string _类型;
		
		private System.Nullable<long> _c;
		
		public Proc_GetStockFirstDealDayResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券代码", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string 证券代码
		{
			get
			{
				return this._证券代码;
			}
			set
			{
				if ((this._证券代码 != value))
				{
					this._证券代码 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_证券名称", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string 证券名称
		{
			get
			{
				return this._证券名称;
			}
			set
			{
				if ((this._证券名称 != value))
				{
					this._证券名称 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_成交日期", DbType="DateTime NOT NULL")]
		public System.DateTime 成交日期
		{
			get
			{
				return this._成交日期;
			}
			set
			{
				if ((this._成交日期 != value))
				{
					this._成交日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_类型", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string 类型
		{
			get
			{
				return this._类型;
			}
			set
			{
				if ((this._类型 != value))
				{
					this._类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c", DbType="BigInt")]
		public System.Nullable<long> c
		{
			get
			{
				return this._c;
			}
			set
			{
				if ((this._c != value))
				{
					this._c = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
